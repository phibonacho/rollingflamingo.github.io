{"version":3,"sources":["component/theme/ThemeContext.tsx","component/hero-banner/HeroBanner.tsx","component/fontawesome/fontawesome.ts","component/disclaimer/Disclaimer.tsx","component/step-list/StepList.tsx","component/static/BuildingDisclaimer.tsx","component/person-card/PersonCard.tsx","component/static/MyCard.tsx","component/toggle/Toggle.tsx","component/navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ThemeContext","React","theme","themeToggle","HeroBanner","className","this","context","props","leftContent","rightContent","contextType","library","add","faLinkedin","faGithub","faDocker","Disclaimer","title","children","StepList","steps","map","step","i","BuildingDisclaimer","Component","PersonCard","descriptions","description","featuredLinks","fl","href","url","icon","MyCard","alt","Toggle","state","type","id","onClick","htmlFor","Navbar","selector","transform","window","addEventListener","setState","pageYOffset","current","getBoundingClientRect","bottom","ref","App","toggleTheme","bind","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.778eb4d8.chunk.js","sourcesContent":["import * as React from 'react';\n\nexport interface IThemeState {\n  theme: string;\n}\n\nexport interface IThemeAction {\n  type: string;\n}\n\n/*function themeReducer(state: IThemeState, action: IThemeAction): IThemeState {\n  switch (action.type) {\n    case 'lighten': {\n      return {theme: 'light'}\n    }\n    case 'darken': {\n      return {theme: 'dark'}\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\n\n// @ts-ignore\nfunction ThemeContext({children}) {\n  const ThemeStateContext = React.createContext({});\n  const ThemeDispatchContext = React.createContext({});\n  const [state, dispatch] = React.useReducer(themeReducer, {theme: 'light'});\n\n  return (\n    <ThemeStateContext.Provider value={state}>\n      <ThemeDispatchContext.Provider value={dispatch}>\n        {children}\n      </ThemeDispatchContext.Provider>\n    </ThemeStateContext.Provider>\n  );\n\n}*/\n\nconst ThemeContext = React.createContext({\n  theme: 'light',\n  themeToggle: () => {}\n});\n\nexport default ThemeContext;\n","import * as React from \"react\";\nimport IHeroBannerProps, {IHeroBannerState} from \"./IHeroBanner\";\n\nimport './hero-banner.scss';\nimport ThemeContext from \"../theme/ThemeContext\";\n\nexport default class HeroBanner extends React.Component<IHeroBannerProps, IHeroBannerState> {\n  static contextType = ThemeContext;\n\n  public render() {\n    return <div className={`hero-banner ${this.context.theme}`}>\n      <div className={'left-container'}>\n        {this.props.leftContent}\n      </div>\n      <div className={'right-container'}>\n        {this.props.rightContent}\n      </div>\n    </div>;\n  }\n}\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons/faLinkedin\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons/faGithub\";\nimport {faDocker} from \"@fortawesome/free-brands-svg-icons/faDocker\";\n\nlibrary.add(faLinkedin, faGithub, faDocker);\n","import * as React from \"react\";\nimport IDisclaimerProps, {IDisclaimerState} from \"./IDisclaimer\";\n\nimport './disclaimer.scss'\nimport ThemeContext from \"../theme/ThemeContext\";\n\nexport default class Disclaimer extends React.Component<IDisclaimerProps, IDisclaimerState> {\n  static contextType = ThemeContext;\n\n  public render() {\n    return (<div className={`disclaimer ${this.context.theme}`}>\n      <div className={'disclaimer-header'}>\n        <h2>{this.props.title}</h2>\n      </div>\n      <div className={'disclaimer-body'}>\n        {this.props.children}\n      </div>\n    </div>);\n  }\n}\n","import * as React from \"react\";\nimport IMilestoneProps, {IMilestoneState} from \"./IStepList\";\nimport './step-list.scss';\nimport ThemeContext from \"../theme/ThemeContext\";\n\nexport default class StepList extends React.Component<IMilestoneProps, IMilestoneState> {\n  static contextType = ThemeContext;\n\n  public render() {\n    return (\n      <div className={`milestone ${this.context.theme}`}>\n        <ul>\n          {this.props.steps.map((step, i) => (\n            <li key={i}>{step}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Disclaimer from \"../disclaimer/Disclaimer\";\nimport StepList from \"../step-list/StepList\";\nimport ThemeContext from \"../theme/ThemeContext\";\n\nexport default class BuildingDisclaimer extends React.Component<any, any> {\n  static contextType = ThemeContext;\n\n  public render() {\n    return (<Disclaimer title={'Page under construction!'}>\n      <p>This should be a personal page, I'm building it in my free time so it will take a while, here's what I've accomplished so far:</p>\n      <StepList steps={\n        [\n          'Github repository setup',\n          'React project setup, this had to been done twice, since the first time I forgot to set the language to typescript... My bad.',\n          'Configured Github Pages deploy, this was a bit tricky but it actually do no more than to commit production build into gh-pages branch.',\n          'Initial page setup, which is what you\\'re currently viewing, I swear it\\'ll get better.',\n          'Added Responsive layout.',\n          'Enhanced Hero Banner background optimization (kind of).',\n          'Added theming (light and dark).',\n          'Added theme switcher and Navbar (a very hideous one).'\n        ]\n      }\n      />\n    </Disclaimer>);\n  }\n}\n","import React from \"react\";\nimport IPersonCardProps, {IPersonCardState} from \"./IPersonCard\";\nimport './person-card.scss';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport ThemeContext from \"../theme/ThemeContext\";\n\nexport default class PersonCard extends React.Component<IPersonCardProps, IPersonCardState> {\n  static contextType = ThemeContext;\n\n  render() {\n    return (\n      <div className={`person-card ${this.context.theme}`}>\n        <h1>{this.props.title}</h1>\n        <div className={'description-content'}>\n          {this.props.descriptions.map((description, i) => (\n            <p key={i}>{description}</p>\n          ))}\n          <div className={'lang-list'}>\n            <ul>\n              {this.props.featuredLinks.map((fl, i) =>\n                (<li key={i}>\n                  <a href={fl.url}>\n                    <FontAwesomeIcon icon={fl.icon}/>\n                  </a>\n                </li>)\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PersonCard from \"../person-card/PersonCard\";\n\nexport default class MyCard extends React.Component<any, any> {\n  public render() {\n    return (\n      <PersonCard\n        title={'Andrea Storace'}\n        descriptions={[\n          'Computer Science Bachelor Graduate',\n          'Software Engineering Student',\n          'Junior Web Developer'\n        ]}\n        featuredLinks={[\n          {\n            url: 'https://github.com/rollingflamingo',\n            icon: ['fab', 'github'],\n            alt: 'Github Profile'\n          },\n          {\n            url: 'https://www.linkedin.com/in/andrea-storace-73b9b9103/',\n            icon: ['fab', 'linkedin'],\n            alt: 'Linkedin profile'\n          }\n        ]}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport IToggleProps, {IToggleState} from \"./IToggle\";\n\nimport './toggle.scss';\nimport ThemeContext from \"../theme/ThemeContext\";\n\nexport default class Toggle extends React.Component<IToggleProps, IToggleState>{\n  static contextType = ThemeContext;\n\n  constructor(props: IToggleProps) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  public render() {\n    return (<div className={`toggle ${this.context.theme}`}>\n      <input type=\"checkbox\" id={this.props.id} onClick={this.props.onClick} />\n      <label htmlFor={this.props.id}/>\n    </div>);\n  }\n\n\n\n}\n","import INavbarProps , { INavbarState } from \"./INavbar\";\nimport * as React from \"react\";\nimport './navbar.scss';\nimport ThemeContext from \"../theme/ThemeContext\";\n\nexport default class Navbar extends React.Component<INavbarProps, INavbarState> {\n  static contextType = ThemeContext;\n  private readonly selector: React.RefObject<HTMLHeadElement>;\n\n  public constructor(props: INavbarProps) {\n    super(props);\n    this.selector = React.createRef<HTMLHeadElement>();\n    this.state = {\n      transform: false\n    }\n  }\n\n\n\n  public componentDidMount() {\n    window.addEventListener('scroll', () => {\n      this.setState({\n        transform: window.pageYOffset > (this.selector.current?.getBoundingClientRect().bottom || 100)\n      });\n    }, false);\n  }\n\n  public render() {\n    return (\n      <header ref={this.selector} className={`custom-navbar ${this.context.theme} ${this.state.transform ? 'opaque' : ''}`}>\n        <div className={'main-container'}>\n          <div className={'left-container'}>\n            { this.props.leftContent }\n          </div>\n          <div className={'right-container'}>\n            { this.props.rightContent }\n          </div>\n        </div>\n      </header>);\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport HeroBanner from \"./component/hero-banner/HeroBanner\";\nimport \"./component/fontawesome/fontawesome\";\nimport BuildingDisclaimer from \"./component/static/BuildingDisclaimer\";\nimport MyCard from \"./component/static/MyCard\";\nimport ThemeContext from \"./component/theme/ThemeContext\";\nimport Toggle from \"./component/toggle/Toggle\";\nimport Navbar from \"./component/navbar/Navbar\";\n\ninterface IAppProps {\n\n}\n\ninterface IAppState {\n  theme: 'light' | 'dark';\n}\n\nexport default class App extends React.Component<IAppProps, IAppState>{\n\n  constructor(props: IAppProps) {\n    super(props);\n    this.state = {\n      theme: \"light\"\n    }\n\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  private toggleTheme() {\n    this.setState({\n      theme: this.state.theme === 'light'\n        ? 'dark'\n        : 'light'\n    });\n  }\n\n  public render() {\n    return (\n      <div className=\"App\">\n          <ThemeContext.Provider value={{\n            theme: this.state.theme,\n            themeToggle: this.toggleTheme\n          }}>\n            <Navbar\n              rightContent={\n                <Toggle id={`theme-switch`} onClick={this.toggleTheme}/>\n              }\n            />\n            <HeroBanner\n              leftContent={<BuildingDisclaimer/>}\n              rightContent={<MyCard/>}\n            />\n            <div className={'temp-disclaimer'}>\n              <BuildingDisclaimer/>\n            </div>\n          </ThemeContext.Provider>\n      </div>\n  );\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}